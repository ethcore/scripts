# .gitlab-ci.yml
# paritytech/scripts
#


stages:
  - build
  - deploy
  - destroy






variables:
  # CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  # DOCKER_HOST: tcp://docker:2375
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2



.kubernetes-build:                 &kubernetes-build
  only:
    refs:
      - schedules
      - web
    kubernetes: active
  tags:
    - kubernetes-parity-build


.build:                            &docker_build
  stage: build
  <<:                              *kubernetes-build
  image:                           docker:stable
  services:
    - docker:dind
  before_script:
    - test -z "$DOCKERIMAGE" && echo "DOCKERIMAGE must be defined" && exit 1
    - docker login -u "${Docker_Hub_User_Parity}" -p "${Docker_Hub_Pass_Parity}"
    - docker info
  script:
    - cd dockerfiles/$DOCKERFILE_DIR
    # - docker pull $CONTAINER_IMAGE:$CONTAINER_TAG || true
    # - docker build --cache-from $CONTAINER_IMAGE:$CONTAINER_TAG --tag $CONTAINER_IMAGE:$CI_BUILD_REF --tag $CONTAINER_IMAGE:$CONTAINER_TAG .
    - export CONTAINER_DATE_TAG="${CI_COMMIT_SHORT_SHA}-$(date +%Y%m%d)"
    - docker build --no-cache
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date +%Y%m%d)"
        --tag parity/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
        --tag parity/$CONTAINER_IMAGE:$CONTAINER_TAG .
    - docker push parity/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
    - docker push parity/$CONTAINER_IMAGE:$CONTAINER_TAG
  after_script:
    - docker logout
  environment:
    name: parity-build

.build_to_own_reg:                 &docker_build_to_own_reg
  <<:                              *docker_build
  before_script:
    - test -z "$DOCKERIMAGE" && echo "DOCKERIMAGE must be defined" && exit 1
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY/pub/ci/
    - docker info
  script:
    - cd dockerfiles/$DOCKERFILE_DIR
    # - docker pull $CONTAINER_IMAGE:$CONTAINER_TAG || true
    # - docker build --cache-from $CONTAINER_IMAGE:$CONTAINER_TAG --tag $CONTAINER_IMAGE:$CI_BUILD_REF --tag $CONTAINER_IMAGE:$CONTAINER_TAG .
    - export CONTAINER_DATE_TAG="${CI_COMMIT_SHORT_SHA}-$(date +%Y%m%d)"
    - docker build --no-cache
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date +%Y%m%d)"
        --tag $CI_REGISTRY/pub/ci/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
        --tag $CI_REGISTRY/pub/ci/$CONTAINER_IMAGE:$CONTAINER_TAG .
    - docker push $CI_REGISTRY/pub/ci/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
    - docker push $CI_REGISTRY/pub/ci/$CONTAINER_IMAGE:$CONTAINER_TAG


# TODO: check/change substrate 1.0, polkadot 0.4, zcash, parity-pharma, parity-bitcoin, light and remove this image
rust:
  <<: *docker_build
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 nightly
    DOCKERFILE_DIR:                rustup
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

parity-ci-linux:
  <<:                              *docker_build_to_own_reg
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 latest
    DOCKERFILE_DIR:                $CI_JOB_NAME
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

parity-ci-android:
  <<:                              *docker_build_to_own_reg
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 stretch
    DOCKERFILE_DIR:                $CI_JOB_NAME
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

parity-ci-i386:
  <<:                              *docker_build_to_own_reg
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 latest
    DOCKERFILE_DIR:                $CI_JOB_NAME
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

parity-ci-arm64:
  <<:                              *docker_build_to_own_reg
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 latest
    DOCKERFILE_DIR:                $CI_JOB_NAME
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

parity-ci-armhf:
  <<:                              *docker_build_to_own_reg
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 latest
    DOCKERFILE_DIR:                $CI_JOB_NAME
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

parity-ci-docs:
  <<:                              *docker_build_to_own_reg
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 latest
    DOCKERFILE_DIR:                $CI_JOB_NAME
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

rust-builder:
  <<: *docker_build
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 latest
    DOCKERFILE_DIR:                $CI_JOB_NAME
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME


awscli:
  <<:                              *docker_build_to_own_reg
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 latest
    DOCKERFILE_DIR:                $CI_JOB_NAME
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

tools:
  <<: *docker_build
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 latest
    DOCKERFILE_DIR:                $CI_JOB_NAME
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

# special case as version tags are introduced
kubetools:
  <<: *docker_build
  variables:
    CONTAINER_IMAGE:               $CI_JOB_NAME
    CONTAINER_TAG:                 latest
    DOCKERFILE_DIR:                $CI_JOB_NAME
    # https://github.com/kubernetes/kubernetes/releases
    BUILD_KUBE_VERSION:            "1.14.4"
    # https://github.com/kubernetes/helm/releases
    # will be overwritten by the global variable at
    # https://gitlab.parity.io/groups/parity/-/settings/ci_cd
    BUILD_HELM_VERSION:            "2.14.2"
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME
      - $DOCKERIMAGE == "kubetools"
  script:
    - |
      cat <<-EOT
      |
      | # build of kubetools image
      |
      | KUBE_VERSION = ${BUILD_KUBE_VERSION}
      | HELM_VERSION = ${BUILD_HELM_VERSION}
      |
      EOT
    - cd dockerfiles/$DOCKERFILE_DIR
    - docker build
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg KUBE_VERSION="${BUILD_KUBE_VERSION}"
      --build-arg HELM_VERSION="${BUILD_HELM_VERSION}"
      --tag parity/$CONTAINER_IMAGE:$CONTAINER_TAG
      --tag parity/$CONTAINER_IMAGE:$BUILD_HELM_VERSION .
    - docker push parity/$CONTAINER_IMAGE:$CONTAINER_TAG
    - docker push parity/$CONTAINER_IMAGE:$BUILD_HELM_VERSION



#
# polkadot:sync jobs are set up via gitlab schedule on this repo with the idea
# to be notified when the chain isn't syncing properly on the latest build
#


.polkasync-env:                    &polkasync-env
  <<:                              *kubernetes-build
  environment:
    name: polkasync

.polkasync:                        &polkasync
  <<:                              *polkasync-env
  image:                           parity/kubetools:latest
  variables:
    RELEASES_URL:                  https://releases.parity.io/polkadot/x86_64-ubuntu:xenial
    KUBE_NAMESPACE:                polkasync
  before_script:
    - kubectl get ns "${KUBE_NAMESPACE}"
    - |
      test -z "$(expr "${PROJECT}" : '\(substrate\|polkadot\)')" &&
        ( echo "|  project '${PROJECT}' not supported"; exit 5 )
      if [ "${PRNO}" ]
      then
        echo "deploying docker image for ${PROJECT} PR NO ${PRNO}"
        export VERSION="pr-${PRNO}"
      else
        # VERSION="0.3.21-6bee107"
        export VERSION="$(wget -q -O - ${RELEASES_URL}/latest-v0.4/VERSION)"
      fi
    - echo "${PROJECT} version = ${VERSION}"
    - export NAME="${PROJECT}-alex"
    - export CONTAINER_IMAGE="parity/${PROJECT}"


polkadot:sync:dockerize:
  stage:                           build
  <<:                              *polkasync-env
  image:                           docker:stable
  services:
    - docker:dind
  variables:
    GIT_STRATEGY:                  none
    CONTAINER_IMAGE:               "parity/${PROJECT}"
  only:
    variables:
      - $JOB_ID
  before_script:
    - test "${Docker_Hub_User_Parity}" -a "${Docker_Hub_Pass_Parity}"
        || ( echo "no docker credentials provided"; exit 1 )
    - docker login -u "${Docker_Hub_User_Parity}" -p "${Docker_Hub_Pass_Parity}"
    - docker info
  script:
    - |
      test -z "$(expr "${PROJECT}" : '\(substrate\|polkadot\)')" && \
        ( echo "|  project '${PROJECT}' not supported"; exit 5 )
    - echo "Building docker image tag ${PROJECT}:pr-${PRNO}"
    - wget -O substrate.zip https://gitlab.parity.io/parity/${PROJECT}/-/jobs/${JOB_ID}/artifacts/download
    - unzip substrate.zip
    - cd ./artifacts
    - docker build --tag ${CONTAINER_IMAGE}:pr-${PRNO} .
    - docker push ${CONTAINER_IMAGE}:pr-${PRNO}
  after_script:
    - docker logout



polkadot:sync:start:
  stage:                           deploy
  <<:                              *polkasync
  only:
    variables:
      - $POLKASYNC == "start"
      - $JOB_ID
  script:
    - kubectl -n "${KUBE_NAMESPACE}" get pod ${NAME} &&
      (echo "pod ${NAME} already exists. deleting it first.";
      kubectl -n "${KUBE_NAMESPACE}" delete pod ${NAME})
    - envsubst < polkasync/deployment.yaml | kubectl -n "${KUBE_NAMESPACE}" apply -f -

      # sed -r "s;^([[:space:]]+image: +\"parity/polkadot):.*\"$;\1:${VERSION}\";" \
      #   polkasync/deployment.yaml | kubectl -n "${KUBE_NAMESPACE}" apply -f -




# this stop job is deprecated. polkasync test will be resetted nightly instead.
polkadot:sync:stop:
  stage:                           destroy
  <<:                              *polkasync
  only:
    variables:
      - $POLKASYNC == "stop"
      - $JOB_ID
  script:
    - |
      PAYLOAD="{\"jsonrpc\":\"2.0\",\"method\":\"system_health\",\"params\":[],\"id\":0}"
      get_out () {
        envsubst < polkasync/deployment.yaml | kubectl -n "${KUBE_NAMESPACE}" delete -f -
        case "$1" in
          (FAIL) echo "a check failed - alert somebody"; exit 1;;
          (*)    echo "chain seems to be synced well";;
        esac
      }

      set -x
      for n in 1 2 3 4; do
        kubectl -n "${KUBE_NAMESPACE}" run -it polkacheck --image=parity/tools \
          --restart=Never --pod-running-timeout=1m0s --rm=true --quiet=true -- \
          curl --connect-timeout 10 -sS --data "${PAYLOAD}" \
            -H "Content-Type: application/json" \
            -X POST "${NAME}-rpc:9933" | grep -e '{\|}' > out.json

        grep -q -e isSyncing -e peers out.json || get_out FAIL
        jq -e '.result.isSyncing == false' out.json || get_out FAIL
        jq -e '.result.peers > 2' out.json || get_out FAIL
        sleep 30
      done
      rm -f out.json
      get_out
      set +x
  after_script:
    - test "${PRNO}" -a "${PROJECT}" || exit 0
    - echo "Remove pr-${PRNO} image from docker hub again"
    - |
      set -x
      TOKEN="$(curl -sS -H "Content-Type: application/json" -X POST \
        -d "{\"username\": \"${Docker_Hub_User_Parity}\", \"password\": \"${Docker_Hub_Pass_Parity}\"}" \
        https://hub.docker.com/v2/users/login/ | jq -r .token)"
      curl -sS -X DELETE -H "Authorization: JWT ${TOKEN}" \
        'https://hub.docker.com/v2/repositories/parity/${PROJECT}/tags/pr-${PRNO}/'
      set +x





# vim: expandtab sts=2
