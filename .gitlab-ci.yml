# .gitlab-ci.yml
# paritytech/scripts
#

stages:
  - build
  - test

variables:
  # CONTAINER_IMAGE:    registry.gitlab.com/$CI_PROJECT_PATH
  # DOCKER_HOST:        tcp://docker:2375
  DOCKER_HOST:          tcp://localhost:2375
  DOCKER_DRIVER:        overlay2
  CONTAINER_IMAGE:      $CI_JOB_NAME
  CONTAINER_TAG:        latest
  DOCKERFILE_DIR:       $CI_JOB_NAME

    # Push to CI registry
    # TODO remove when fully switching to dockerhub
.push_to_own_reg: &push_to_own_reg
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - export REGISTRY_PATH="registry.parity.io/parity/infrastructure/scripts"
    - docker tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG $CI_REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
    - docker tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG $CI_REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
    - docker push $CI_REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
    - docker push $CI_REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
    - docker logout

.build:                 &docker_build
  stage:                build
  image:                docker:stable
  variables:
    REGISTRY_PATH:      paritytech
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME
    refs:
      - schedules
      - web
    kubernetes:         active
  tags:
    - kubernetes-parity-build
  services:
    - docker:dind
  environment:
    name:               parity-build
  before_script:
    - test -z "$DOCKERIMAGE" && echo "DOCKERIMAGE must be defined" && exit 1
  script:               &build_and_push_image
    - cd dockerfiles/
    - export CONTAINER_DATE_TAG="${CI_COMMIT_SHORT_SHA}-$(date +%Y%m%d)"
    - docker build --no-cache
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date +%Y%m%d)"
        --build-arg REGISTRY_PATH=$REGISTRY_PATH
        --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
        --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
        --file $DOCKERFILE_DIR/Dockerfile .
    # Push to Dockerhub
    - docker login -u "${Docker_Hub_User_Parity}" -p "${Docker_Hub_Pass_Parity}"
    - docker info
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
    - docker logout


#Build and push to docker hub and CI registry

# triggers the container scanning built-in tool
include:
  - template: Container-Scanning.gitlab-ci.yml


base-ci-linux:
  <<:                   *docker_build
  after_script:
    - *push_to_own_reg

substrate-ci-linux:
  <<:                   *docker_build
  after_script:
    - *push_to_own_reg
ink-ci-linux:
  <<:                   *docker_build
  after_script:
    - *push_to_own_reg
contracts-ci-linux:
  <<:                   *docker_build
  after_script:
    - *push_to_own_reg
awscli:
  <<:                   *docker_build
  after_script:
    - *push_to_own_reg
tools:
  <<:                   *docker_build

query-exporter:
  <<:                   *docker_build

redis-exporter:
  <<:                   *docker_build

# build k8s on top of node 12-alphine
chaostools:
  <<:                   *docker_build
  variables:
    # https://github.com/kubernetes/kubernetes/releases
    BUILD_KUBE_VERSION: "1.14.6"
  script:
    - |
      cat <<-EOT
      |
      | # build of chaostools image
      |
      | KUBE_VERSION = ${BUILD_KUBE_VERSION}
      |
      EOT
    - cd dockerfiles/
    - docker build
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg REGISTRY_PATH=$REGISTRY_PATH
      --build-arg KUBE_VERSION="${BUILD_KUBE_VERSION}"
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
      --file $DOCKERFILE_DIR/Dockerfile .
    # Push to Dockerhub
    - docker login -u "${Docker_Hub_User_Parity}" -p "${Docker_Hub_Pass_Parity}"
    - docker info
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
    - docker logout

# special case as version tags are introduced
kubetools:
  <<:                   *docker_build
  variables:
    # https://github.com/kubernetes/kubernetes/releases
    BUILD_KUBE_VERSION:            "1.18.2"
    # https://github.com/kubernetes/helm/releases
    # will be overwritten by the global variable at
    # https://gitlab.parity.io/groups/parity/-/settings/ci_cd
    BUILD_HELM_VERSION:            "2.16.6"
  script:
    - |
      cat <<-EOT
      |
      | # build of kubetools image
      |
      | KUBE_VERSION = ${BUILD_KUBE_VERSION}
      | HELM_VERSION = ${BUILD_HELM_VERSION}
      |
      EOT
    - cd dockerfiles/
    - docker build
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg REGISTRY_PATH=$REGISTRY_PATH
      --build-arg KUBE_VERSION="${BUILD_KUBE_VERSION}"
      --build-arg HELM_VERSION="${BUILD_HELM_VERSION}"
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$BUILD_HELM_VERSION
      --file $DOCKERFILE_DIR/Dockerfile .
    # Push to Dockerhub
    - docker login -u "${Docker_Hub_User_Parity}" -p "${Docker_Hub_Pass_Parity}"
    - docker info
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$BUILD_HELM_VERSION
    - docker logout


terraform:
  <<:                   *docker_build
  variables:
    # https://releases.hashicorp.com/terraform/
    TERRAFORM_VERSION:  "0.12.24"
  script:
    - |
      cat <<-EOT
      |
      | # build of terraform image
      |
      | TERRAFORM_VERSION = ${TERRAFORM_VERSION}
      |
      EOT
    - cd dockerfiles/
    - docker build
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg REGISTRY_PATH=$REGISTRY_PATH
      --build-arg TERRAFORM_VERSION="${TERRAFORM_VERSION}"
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$TERRAFORM_VERSION
      --file $DOCKERFILE_DIR/Dockerfile .
    # Push to Dockerhub
    - docker login -u "${Docker_Hub_User_Parity}" -p "${Docker_Hub_Pass_Parity}"
    - docker info
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$TERRAFORM_VERSION
    - docker logout


# TODO: do not forget to unprotect a branch
# container_scanning: # for own reg
#   stage:                           test
#   only:
#     variables:
#       - $DOCKERIMAGE
#   variables:
#     GIT_STRATEGY:                  fetch
#     # CI_APPLICATION_REPOSITORY:     $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE
#     CI_APPLICATION_REPOSITORY:     registry.parity.io/parity/infrastructure/scripts/awscli
#     # CI_APPLICATION_TAG:            $CONTAINER_DATE_TAG OR $CONTAINER_TAG
#     CI_APPLICATION_TAG:            latest
#     # DOCKERFILE_PATH:               dockerfiles/$DOCKERFILE_DIR/Dockerfile
#     DOCKERFILE_PATH:               dockerfiles/awscli/Dockerfile
#     # DOCKER_USER:                   $Docker_Hub_User_Parity
#     # DOCKER_PASSWORD:               $Docker_Hub_Pass_Parity

container_scanning: # for dockerhub
  stage:                           test
  only:
    variables:
      - $DOCKERIMAGE
  variables:
    GIT_STRATEGY:                  fetch
    # CI_APPLICATION_REPOSITORY:     $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE
    CI_APPLICATION_REPOSITORY:     parity/tools
    # CI_APPLICATION_TAG:            $CONTAINER_DATE_TAG OR $CONTAINER_TAG
    CI_APPLICATION_TAG:            latest
    # DOCKERFILE_PATH:               dockerfiles/$DOCKERFILE_DIR/Dockerfile
    DOCKERFILE_PATH:               dockerfiles/tools/Dockerfile
    DOCKER_USER:                   $Docker_Hub_User_Parity
    DOCKER_PASSWORD:               $Docker_Hub_Pass_Parity


 # vim: expandtab sts=2
